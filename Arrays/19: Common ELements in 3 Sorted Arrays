class Solution {
	public static void commonElements(int[] A,int[] B,int[] C) {

		int n1 = A.length;
		int n2 = B.length;
		int n3 = C.length;
		for (int i = 0; i < n1; i++) {
			for (int j = 0; j < n2; j++) {
				for (int j2 = 0; j2 < n3; j2++) {
					if(A[i] == B[j] && A[i] == C[j2])
						System.out.println(A[i]);
				}
			}
		}
	}
	public static void main(String[] args) {
		int []A = {1, 5, 10, 20, 40, 80};
		int []B = {6, 7, 20, 80, 100};
		int []C = {3, 4, 15, 20, 30, 70, 80, 120};
		commonElements(A, B, C);
	}
}                                     time O(n^3)  space O(n)
--------------------------------------------------------------
import java.util.Map;
import java.util.TreeMap;

class Solution {
	public static void commonElements(int[] A,int[] B,int[] C) {
		int n1 = A.length;
		int n2 = B.length;
		int n3 = C.length;
		Map<Integer,Integer> hMap = new TreeMap<>();
		for (int i = 0; i < n1; i++) 
			hMap.put(A[i], 1);
		for (int i = 0; i < n2; i++) { 
			if(hMap.containsKey(B[i]))
				hMap.put(B[i], hMap.get(B[i])+1);
		}
		for (int i = 0; i < n3; i++) { 
			if(hMap.containsKey(C[i]))
				hMap.put(C[i], hMap.get(C[i])+1);
		}
		for(Map.Entry<Integer,Integer> eSet : hMap.entrySet()) {
			if(eSet.getValue()>=3)
				System.out.print(eSet.getKey()+" ");
		}
	}
	public static void main(String[] args) {
		int []A = {1,3, 5, 10, 20, 40, 80,100};
		int []B = {6, 7, 20, 80, 100,3};
		int []C = {3, 4, 15, 20, 30, 70, 80, 120};
		commonElements(A, B, C);
	}
}                                     time O(n)  space O(n)
-------------------------------------------------------------
