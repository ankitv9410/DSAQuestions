Q)Buy and Sell only One Stock
  1)Brute force -->
 public static int bruteForce(int[] arr) {
	int max,maxProfit;
	max = maxProfit = 0;
	for (int i = 0; i < arr.length; i++) {
		for (int j = i+1; j < arr.length; j++) {
			if (arr[i] < arr[j]) {
				max = arr[j] - arr[i];
			}
			if(max > maxProfit)
				maxProfit = max;
		}
		System.out.println(maxProfit);
	}
	return maxProfit;
}
               Time O(n^2)   space O(1)
-------------------------------------------------------------------------
2)Optimized Solution
class Solution {
	public static int bruteForce(int[] arr) {

		int min = arr[0], max = arr[0], index, maxProfit;
		max = maxProfit = index = 0;
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] > max) {
				max = arr[i];
				index = i;
			}
		}
		for (int i = 0; i < index; i++) {
			if (arr[i] < min) {
				min = arr[i];
			}
		}
		maxProfit = max - min;

		return maxProfit;
	}

	public static void main(String args[]) {
		int[] arr = { 3, 5, 1, 7, 4, 9, 3 };
		System.out.println(bruteForce(arr));
	}
}                                                Time O(n)   space O(1)
---------------------------------------------------------------------------
3)Optimized Solution
class Solution {
	public static int bruteForce(int[] arr) {

		int min = arr[0], max = arr[0], maxProfit;
		max = maxProfit = 0;
		for (int i = 1; i < arr.length; i++) {
			if(arr[i]<min)
				min = arr[i];    // min = Math.min(arr[i], min);
			
			max = arr[i]-min;
			if(max>maxProfit)
				maxProfit = max;   // maxProfit = Math.max(max, maxProfit);
		}
		return maxProfit;
	}

	public static void main(String args[]) {
		int[] arr = { 3, 5, 1, 7, 4, 9, 3 };
		System.out.println(bruteForce(arr));
	}
}                                                Time O(n)   space O(1)
---------------------------------------------------------------------------
We can buy and sell many times.
class Solution {
	public static int bruteForce(int[] A, int n) {

		int profit = 0;
		n = A.length;
		for (int i = 1; i < n; i++) {
			if (A[i] > A[i - 1])
				profit += A[i] - A[i - 1];
		}
		return profit;
	}

	public static void main(String args[]) {
		int[] arr = { 100, 180, 260, 310, 40, 535, 695 };
		System.out.println(bruteForce(arr,arr.length));
	}
}                                                Time O(n)   space O(1)
