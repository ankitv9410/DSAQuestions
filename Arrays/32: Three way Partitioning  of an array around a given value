class Solution {
	static void partition(int arr[]) {
        Arrays.sort(arr);
	}
	public static void main(String[] args) {
		int arr[] = { 1, 14, 5, 20, 4, 2, 54, 20, 87, 98, 3, 1, 32 };
		partition(arr, arr.length-1, 14, 20);
		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}
}                      time O(n)  space O(1)   
-----------------------------------------------------------------
class Solution {
	static void partition(int arr[], int n, int l, int h) {
		int i = 0, start = 0, end = n;
		while (i <= end) {
			if (arr[i] < l) {
				int temp = arr[i];
				arr[i] = arr[start];
				arr[start] = temp;
				i++;
				start++;
			} else if (arr[i] > h) {
				int temp = arr[i];
				arr[i] = arr[end];
				arr[end] = temp;
				end--;
			} else
				i++;
		}
	}
	public static void main(String[] args) {
		int arr[] = { 1, 14, 5, 20, 4, 2, 54, 20, 87, 98, 3, 1, 32 };
		partition(arr, arr.length-1, 14, 20);
		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}
}                      time O(n)  space O(1)   
