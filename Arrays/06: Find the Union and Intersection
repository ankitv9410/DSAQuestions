import java.util.HashSet;
import java.util.Set;

class Solution {
	public static void union(int[] arr1, int[] arr2) {
		int i, j, m, n;
		i = j = 0;
		m = arr1.length;
		n = arr2.length;
		System.out.println("Union" + " ");
		while (i < m && j < n) {
			if (arr1[i] < arr2[j])
				System.out.print(arr1[i++] + " ");
			else if (arr2[j] < arr1[i])
				System.out.print(arr2[j++] + " ");
			else if (arr1[i] == arr2[j]) {
				System.out.print(arr1[i++] + " ");
				j++;
			}
		}
		while (i < m)
			System.out.print(arr1[i++] + " ");
		while (j < n)
			System.out.print(arr2[j++] + " ");

		System.out.println();
		System.out.println("Union"+" ");
		Set<Integer> s = new HashSet<>();
		for (int i = 0; i < arr1.length; i++) {
			s.add(arr1[i]);
		}
		for (int i = 0; i < arr2.length; i++) {
			s.add(arr2[i]);
		}
		for (Integer i : s) {
			System.out.print(i+" ");
		}
		System.out.println();
	}
	public static void intersection(int[] arr1, int[] arr2) {
		int i, j, m, n;
		i = j = 0;
		m = arr1.length;
		n = arr2.length;
		System.out.println("Intersection" + " ");
		while (i < m && j < n) {
			if (arr1[i] < arr2[j])
				i++;
			else if (arr2[j] < arr1[i])
				j++;
			else if (arr1[i] == arr2[j]) {
				System.out.print(arr1[i++] + " ");
				j++;
			}
		}
	}
	public static void main(String args[]) {
		int arr1[] = { 1, 3, 4, 5, 6, 7 };
		int arr2[] = { 0, 2, 3, 5, 7, 8, 9 };
		union(arr1, arr2);
		intersection(arr1, arr2);
	}
}
