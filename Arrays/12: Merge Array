class Solution {

	private static void mergeTwoSortedArr(int[] arr1, int[] arr2) {
		int len1 = arr1.length;
		int len2 = arr2.length;
		
		int []temp = new int[len1+len2];
		for (int i = 0; i < arr1.length; i++) 
			temp[i] = arr1[i];
		for (int j = 0; j < arr2.length; j++) 
			temp[len1+j] = arr2[j];
		
		Arrays.sort(temp);
		for (int i : temp) {
			System.out.print(i+" ");
		}
	}
	public static void main(String args[]) {
		int[] arr1 = { 11, 33, 55, 77, 99 };
		int[] arr2 = { 22, 44, 66, 88 };
		mergeTwoSortedArr(arr1,arr2);
	}
}		      time O(n+n+n+nLogn) = O(nLogn)  space O(n)
-----------------------------------------------------------------
class Solution {

	private static void mergeTwoSortedArr(int[] arr1, int[] arr2) {
		int len1 = arr1.length;
		int len2 = arr2.length;

		int temp[] = new int[len1 + len2];

		int i = 0, j = 0, k = 0;
		while (i < len1 && j < len2) {
			if (arr1[i] < arr2[j])
				temp[k++] = arr1[i++];
			else if (arr1[i] > arr2[j])
				temp[k++] = arr2[j++];
			else {
				if (i < len1) {
					temp[k++] = arr1[i++];
					j++;
				} else {
					temp[k++] = arr2[j++];
					i++;
				}
			}
		}
		while(i<len1)
			temp[k++] = arr1[i++];
		while(j<len2)
			temp[k++] = arr2[j++];
		
		for (int l : temp) {
			System.out.print(l+" ");
		}
	}
	public static void main(String args[]) {
		// Scanner sc = new Scanner(System.in);
		int[] arr1 = { 11, 33, 55, 77, 99,100,110 };
		int[] arr2 = { 22, 44, 66, 88,99 };
		mergeTwoSortedArr(arr1, arr2);
	}
}		      time O(n) space O(n)
